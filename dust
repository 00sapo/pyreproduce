#!/bin/env sh

# POSIX-compliant script for setting up your shell
thisdir=$(realpath $(dirname $0))
source ${thisdir}/pyenv/pyenv-source.sh $thisdir

setup_pypackages() {
  if test $1 = "pdm"
  then
    export PYTHONPATH="$(pdm info --packages)/lib:$PYTHONPATH"
  fi
}

# get the dust mode
mode=$(cat .dust-mode 2>/dev/null)
if test -z $mode; then echo "Please, set a mode and/or run ./install.sh"; exit; fi

# special command: shell
if test "$1" = "fly"
then
  setup_pypackages $mode
  "${@:2}"
  exit
fi

if test "$1" = "shell"
then
  shell=$(cat /proc/$PPID/comm)
  # removing link (e.g. sh -> /usr/bin/bash)
  shell=$(basename $(realpath $(which $shell))) 
  # shell_command=$(cat /proc/$PPID/cmdline)
  setup_pypackages $mode
  if test "$shell" = "fish"
  then
    pyenv exec $shell -C "source ${thisdir}/pyenv/pyenv-source.fish $thisdir"
  elif test "$shell" = "bash" 
  then
    pyenv exec $shell --init-file <(echo "source ${thisdir}/pyenv/pyenv-source.sh $thisdir")
  else
    echo "Sorry, we cannot spawn your shell: only fish and bash supported."
  fi
  exit
fi

# run the command with pdm if it is installed
case $mode in
  "pdm")
    pdm "$@"
    pdm export > requirements.txt 2>/dev/null
    ;;
  "pip")
    pyenv exec pip "$@"
    pyenv exec pip freeze > requirements.txt 2>/dev/null
    ;;
  *)
esac

if test $ERROR
then
  echo "Some error happened! Have you run 'install.sh'?"
  exit 1
fi
